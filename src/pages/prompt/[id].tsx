import { GetServerSideProps } from 'next';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { PromptData } from '@/types';\nimport { loadPromptData } from '@/lib/data';\nimport { Header } from '@/components/Header';\nimport { CopyButton } from '@/components/CopyButton';\n\ninterface PromptDetailProps {\n  prompt: PromptData | null;\n}\n\nexport default function PromptDetail({ prompt }: PromptDetailProps) {\n  const router = useRouter();\n  const isEn = router.locale === 'en';\n\n  if (!prompt) {\n    return (\n      <>\n        <Head>\n          <title>{isEn ? 'Prompt Not Found' : '提示词未找到'}</title>\n        </Head>\n        <div className=\"min-h-screen bg-gray-100\">\n          <Header />\n          <main className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n            <div className=\"text-center\">\n              <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                {isEn ? 'Prompt Not Found' : '提示词未找到'}\n              </h1>\n              <Link href=\"/\" className=\"text-blue-600 hover:text-blue-800\">\n                {isEn ? 'Back to Home' : '返回首页'}\n              </Link>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{prompt.title} - {isEn ? 'AI Photo Prompts' : 'AI 照片提示'}</title>\n        <meta name=\"description\" content={prompt.description || prompt.prompt.substring(0, 160)} />\n      </Head>\n\n      <div className=\"min-h-screen bg-gray-100\">\n        <Header />\n        \n        <main className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"mb-6\">\n            <Link href=\"/\" className=\"text-blue-600 hover:text-blue-800 text-sm\">\n              ← {isEn ? 'Back to Gallery' : '返回图库'}\n            </Link>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n            <div className=\"p-8\">\n              <div className=\"mb-6\">\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div>\n                    <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n                      {prompt.title}\n                    </h1>\n                    <div className=\"flex items-center gap-3 text-sm text-gray-600\">\n                      <span>#{prompt.caseNumber}</span>\n                      <span>•</span>\n                      <span>{prompt.model}</span>\n                    </div>\n                  </div>\n                </div>\n\n                {prompt.categories && prompt.categories.length > 0 && (\n                  <div className=\"flex flex-wrap gap-2 mb-6\">\n                    {prompt.categories.map((category) => (\n                      <span\n                        key={category}\n                        className=\"px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded-full\"\n                      >\n                        {category}\n                      </span>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              {prompt.description && (\n                <div className=\"mb-6\">\n                  <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                    {isEn ? 'Description' : '描述'}\n                  </h2>\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    {prompt.description}\n                  </p>\n                </div>\n              )}\n\n              <div className=\"mb-6\">\n                <div className=\"flex justify-between items-center mb-3\">\n                  <h2 className=\"text-lg font-semibold text-gray-900\">\n                    {isEn ? 'Prompt' : '提示词'}\n                  </h2>\n                  <CopyButton text={prompt.prompt} />\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <code className=\"text-sm text-gray-800 whitespace-pre-wrap\">\n                    {prompt.prompt}\n                  </code>\n                </div>\n              </div>\n\n              {prompt.englishPrompt && prompt.englishPrompt !== prompt.prompt && (\n                <div className=\"mb-6\">\n                  <div className=\"flex justify-between items-center mb-3\">\n                    <h2 className=\"text-lg font-semibold text-gray-900\">\n                      {isEn ? 'English Prompt' : '英文提示词'}\n                    </h2>\n                    <CopyButton text={prompt.englishPrompt} />\n                  </div>\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <code className=\"text-sm text-gray-800 whitespace-pre-wrap\">\n                      {prompt.englishPrompt}\n                    </code>\n                  </div>\n                </div>\n              )}\n\n              {prompt.inputRequirement && (\n                <div className=\"mb-6\">\n                  <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                    {isEn ? 'Input Requirements' : '输入要求'}\n                  </h2>\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    {prompt.inputRequirement}\n                  </p>\n                </div>\n              )}\n\n              {prompt.guidance && (\n                <div className=\"mb-6\">\n                  <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                    {isEn ? 'Guidance' : '使用指导'}\n                  </h2>\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    {prompt.guidance}\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  try {\n    const prompts = await loadPromptData();\n    const prompt = prompts.find(p => p.id === params?.id || p.slug === params?.id);\n    \n    return {\n      props: {\n        prompt: prompt || null,\n      },\n    };\n  } catch (error) {\n    console.error('Error loading prompt:', error);\n    return {\n      props: {\n        prompt: null,\n      },\n    };\n  }\n};"